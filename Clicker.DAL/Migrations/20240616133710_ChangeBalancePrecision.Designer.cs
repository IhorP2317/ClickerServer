// <auto-generated />
using System;
using Clicker.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clicker.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240616133710_ChangeBalancePrecision")]
    partial class ChangeBalancePrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Clicker.DAL.Models.ChannelSubscriptionTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ChannelSubscriptionTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.OfferSubscriptionTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("OfferUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OfferSubscriptionTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReferrerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TelegramId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ReferrerId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Clicker.DAL.Models.UserChannelSubscriptionTask", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChannelSubscriptionTaskId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId", "ChannelSubscriptionTaskId");

                    b.HasIndex("ChannelSubscriptionTaskId");

                    b.ToTable("UserChannelSubscriptionTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.UserOfferSubscriptionTask", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OfferSubscriptionTaskId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId", "OfferSubscriptionTaskId");

                    b.HasIndex("OfferSubscriptionTaskId");

                    b.ToTable("UserOfferSubscriptionTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.User", b =>
                {
                    b.HasOne("Clicker.DAL.Models.User", "Referrer")
                        .WithMany("Referrals")
                        .HasForeignKey("ReferrerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Referrer");
                });

            modelBuilder.Entity("Clicker.DAL.Models.UserChannelSubscriptionTask", b =>
                {
                    b.HasOne("Clicker.DAL.Models.ChannelSubscriptionTask", "ChannelSubscriptionTask")
                        .WithMany("UserChannelSubscriptionTasks")
                        .HasForeignKey("ChannelSubscriptionTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clicker.DAL.Models.User", "User")
                        .WithMany("UserChannelTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelSubscriptionTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Clicker.DAL.Models.UserOfferSubscriptionTask", b =>
                {
                    b.HasOne("Clicker.DAL.Models.OfferSubscriptionTask", "OfferTask")
                        .WithMany("UserOfferTasks")
                        .HasForeignKey("OfferSubscriptionTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clicker.DAL.Models.User", "User")
                        .WithMany("UserOfferTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Clicker.DAL.Models.ChannelSubscriptionTask", b =>
                {
                    b.Navigation("UserChannelSubscriptionTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.OfferSubscriptionTask", b =>
                {
                    b.Navigation("UserOfferTasks");
                });

            modelBuilder.Entity("Clicker.DAL.Models.User", b =>
                {
                    b.Navigation("Referrals");

                    b.Navigation("UserChannelTasks");

                    b.Navigation("UserOfferTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
